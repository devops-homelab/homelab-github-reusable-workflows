name: AI Helm Failure Advisor

on:
  workflow_call:
    inputs:
      system_prompt:
        description: 'System prompt to guide the AI behavior.'
        required: true
        type: string
      user_prompt:
        description: 'User prompt including context like logs or error messages.'
        required: true
        type: string
    secrets:
      OPENAI_API_KEY:
        required: true
        description: 'OpenAI API Key for accessing GPT models.'
      GH_PAT:
        required: true
        description: 'GitHub Personal Access Token for commenting on PRs.'

jobs:
  ai-helm-advisor:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest

    steps:
      - name: Query AI for suggestion
        id: ai
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          read -r -d '' SYSTEM_PROMPT <<'EOF'
          ${{ inputs.system_prompt }}
          EOF
            read -r -d '' USER_PROMPT <<'EOF'
          ${{ inputs.user_prompt }}
          EOF
            PAYLOAD=$(jq -n \
              --arg sys "$SYSTEM_PROMPT" \
              --arg user "$USER_PROMPT" \
              '{model: "gpt-4o", messages: [{role: "system", content: $sys}, {role: "user", content: $user}]}' )
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD")
          echo "$RESPONSE"
          SUGGESTION=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
          echo "suggestion<<EOF" >> $GITHUB_OUTPUT
          printf "%s\n" "$SUGGESTION" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on PR
        if: ${{ github.event.workflow_run.pull_requests[0].number }}
        uses: peter-evans/create-or-update-comment@v4
        env:
          token: ${{ secrets.GH_PAT }}
        with:
          issue-number: ${{ github.event.workflow_run.pull_requests[0].number }}
          token: ${{ env.token }}
          body: |
            :robot: **AI Helm Chart Failure Suggestion**
            ```
            ${{ steps.ai.outputs.suggestion }}
            ```
