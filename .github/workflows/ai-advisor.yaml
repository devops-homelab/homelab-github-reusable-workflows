name: AI Helm Failure Advisor

on:
  workflow_call:
    inputs:
      system_prompt:
        description: 'System prompt to guide the AI behavior.'
        required: true
        type: string
      user_prompt:
        description: 'User prompt including context like logs or error messages.'
        required: true
        type: string
    secrets:
      OPENAI_API_KEY:
        required: true
        description: 'OpenAI API Key for accessing GPT models.'
      GH_PAT:
        required: true
        description: 'GitHub Personal Access Token for commenting on PRs.'

jobs:
  ai-helm-advisor:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest

    steps:
      - name: Query AI for suggestion
        uses: Just-Moh-it/openai@v0.0.1
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          openai-mode: "completion"
          openai-params: |
            {
              "prompt": "${{ inputs.system_prompt }}\n${{ inputs.user_prompt }}",
              "model": "gpt-4o"
            }
        id: openai
        # id: ai
        # env:
        #   OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        #   SYSTEM_PROMPT: "${{ inputs.system_prompt }}"
        #   USER_PROMPT: "${{ inputs.user_prompt }}"
        # run: |

        #   RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
        #     -H "Authorization: Bearer $OPENAI_API_KEY" \
        #     -H "Content-Type: application/json" \
        #     -d @- <<EOF
        #   {
        #     "model": "gpt-4o",
        #     "messages": [
        #       {"role": "system", "content": "$SYSTEM_PROMPT"},
        #       {"role": "user", "content": "$USER_PROMPT"}
        #     ]
        #   }
        #   EOF
        #   )

        #   echo "$RESPONSE"
        #   SUGGESTION=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
        #   echo "$SUGGESTION"
        #   echo "suggestion<<EOF" >> $GITHUB_OUTPUT
        #   echo "$SUGGESTION" >> $GITHUB_OUTPUT
        #   echo "EOF" >> $GITHUB_OUTPUT
        #   echo "$SUGGESTION"

      - name: Comment on PR
        if: ${{ github.event.workflow_run.pull_requests[0].number }}
        uses: peter-evans/create-or-update-comment@v4
        env:
          token: ${{ secrets.GH_PAT }}
        with:
          issue-number: ${{ github.event.workflow_run.pull_requests[0].number }}
          token: ${{ env.token }}
          body: |
            :robot: **AI Helm Chart Failure Suggestion**
            ```
            ${{ steps.openai.outputs.result }}
            ```
