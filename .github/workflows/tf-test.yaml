name: Test with Terratest

on:
  workflow_call:
    secrets:
        AWS_ACCESS_KEY_ID:
            required: true
            description: 'AWS Access Key ID'
        AWS_SECRET_ACCESS_KEY:
            required: true
            description: 'AWS Secret Access Key'
        DO_ACCESS_TOKEN: 
            required: true
            description: 'DigitalOcean Token'
        TF_VAR_git_username:
            required: false
            description: 'GIT username for ArgoCD'
        TF_VAR_pat_token:
            required: false
            description: 'GIT PAT for ArgoCD'
        TF_VAR_sso_client_id:
            required: false
            description: 'SSO Client ID for ArgoCD'
        TF_VAR_sso_client_secret:
            required: false
            description: 'SSO Client'
    inputs:
      working_directory:
        description: 'Directory where main.tf exist of the module.'
        required: false
        type: string

jobs:
  load-env-vars:
    name: Load Environment Variables
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: read
      id-token: write

    outputs:
      ENVIRONMENT: ${{ steps.load-env.outputs.ENVIRONMENT }}
      COMPONENT: ${{ steps.load-env.outputs.COMPONENT }}
      MODULE: ${{ steps.load-env.outputs.MODULE }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - id: load-env
        name: Load Environment Variables
        run: |
          source config.env
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "COMPONENT=$COMPONENT" >> $GITHUB_ENV
          echo "MODULE=$MODULE" >> $GITHUB_ENV
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "COMPONENT=$COMPONENT" >> $GITHUB_OUTPUT
          echo "MODULE=$MODULE" >> $GITHUB_OUTPUT

  terratest:
    name: Run Terratest
    runs-on: ubuntu-latest
    needs: load-env-vars

    env:
      DIGITALOCEAN_TOKEN: ${{ secrets.DO_ACCESS_TOKEN }}
      ENVIRONMENT: ${{ needs.load-env-vars.outputs.ENVIRONMENT }}
      COMPONENT: ${{ needs.load-env-vars.outputs.COMPONENT }}
      MODULE: ${{ needs.load-env-vars.outputs.MODULE }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_git_username: ${{ secrets.TF_VAR_git_username }}
      TF_VAR_pat_token: ${{ secrets.TF_VAR_pat_token }}
      TF_VAR_sso_client_id: ${{ secrets.TF_VAR_sso_client_id }}
      TF_VAR_sso_client_secret: ${{ secrets.TF_VAR_sso_client_secret }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.5
          terraform_wrapper: false

      - name: Install Terragrunt
        run: |
          # Pin to v0.84.1 (last version before AWS SDK v2 breaking changes)
          TERRAGRUNT_VERSION="0.84.1"
          curl -L -o /usr/local/bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
          chmod +x /usr/local/bin/terragrunt

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.23

      - name: Install dependencies
        run: go mod tidy

      - name: Run Terratest
        run: go test -v ./test